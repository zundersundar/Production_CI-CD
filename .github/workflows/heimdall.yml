name: CI/CD Pipeline for Heimdall

on:
  push:
    paths:
      - './heimdall/**'      
  workflow_dispatch: 

jobs:
  lint-and-test:
    name: Lint, Security Check, and Test Python Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt

      - name: Install Dependencies
        working-directory: ./heimdall
        run: pip install -r requirements.txt

      - name: Run Pylint
        working-directory: ./heimdall
        run: pylint **/*.py || true

      - name: Install Vulture
        working-directory: ./heimdall
        run: pip install vulture

      - name: Run Vulture
        run: vulture . --min-confidence 80 || true 

      - name: Run Bandit
        working-directory: ./heimdall
        run: bandit -r . || true

      - name: Run Unittests
        working-directory: ./heimdall
        run: python -m unittest discover || true

  build-push-and-deploy:
    name: Build, Push Docker Image, and Deploy to EC2
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        working-directory: ./heimdall
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:7}
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.HEIMDALL }}:heimdall-$IMAGE_TAG .

      - name: Push Docker Image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:7}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.HEIMDALL }}:heimdall-$IMAGE_TAG

      - name: Deploy to EC2
        env:
          EC2_USER: angel  # Change to the correct user if different
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          HEIMDALL: ${{ secrets.HEIMDALL }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << EOF
            set -e
            echo "Logging into AWS ECR..."
            sudo aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com


            echo "Pulling latest Docker image..."
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$HEIMDALL:heimdall-$IMAGE_TAG
            
            echo "Updating docker-compose file..."
            sed -i "s|image:.*|image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$HEIMDALL:heimdall-$IMAGE_TAG|g" docker-compose.yml

            echo "Restarting services..."
            docker-compose down
            docker-compose up -d
          EOF
